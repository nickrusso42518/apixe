---
- name: "PLAY 1: Perform SSH/CLI based setup for RESTCONF"
  hosts: routers
  connection: network_cli
  tasks:
    - name: "TASK 1: Enable RESTCONF on routers"
      ios_config:
        commands: "restconf"
        save_when: changed

- name: "PLAY 2: Infrastructure-as-code using RESTCONF"
  hosts: routers
  connection: local
  tasks:
    - name: "TASK 1: Wait for RESTCONF API to respond via HTTPS"
      uri:
        url: "{{ url }}/data/Cisco-IOS-XE-native:native/Cisco-IOS-XE-native:hostname"
        user: "{{ ansible_user }}"
        password: "{{ ansible_password }}"
        method: GET
        return_content: true
        headers:
          Accept: 'application/yang-data+json'
        validate_certs: false
      register: rc_is_up
      until: "rc_is_up.status == 200"
      retries: 10
      delay: 2

    - name: "TASK 2: Update VRF config with HTTP PUT"
      uri:
        url: "{{ url }}/data/Cisco-IOS-XE-native:native/Cisco-IOS-XE-native:vrf"
        user: "{{ ansible_user }}"
        password: "{{ ansible_password }}"
        method: PUT
        headers:
          Content-Type: 'application/yang-data+json'
          Accept: >-
            application/yang-data+json,
            application/yang-data.errors+json
        body_format: json
        body: "{{ body }}"
        validate_certs: false
        return_content: true
        status_code:
          - 200  # OK
          - 204  # NO CONTENT

    - name: "TASK 3: Save configuration"
      uri:
        url: "{{ url }}/operations/cisco-ia:save-config"
        user: "{{ ansible_user }}"
        password: "{{ ansible_password }}"
        method: POST
        headers:
          Content-Type: "application/yang-data+json"
          Accept:  "application/yang-data+json"
        validate_certs: false

    - name: "TASK 4: Get VRF config with RESTCONF"
      uri:
        url: "{{ url }}/data/Cisco-IOS-XE-native:native/Cisco-IOS-XE-native:vrf"
        user: "{{ ansible_user }}"
        password: "{{ ansible_password }}"
        method: GET
        return_content: true
        headers:
          Accept: 'application/yang-data+json'
        validate_certs: false
      register: rc_vrf

    - name: "TASK 5: Ensure vrf_configs/ folder exists"
      file:
        path: "{{ playbook_dir }}/vrf_configs"
        state: directory

    - name: "TASK 6: Write JSON to disk"
      copy:
        content: "{{ rc_vrf.json | to_nice_json }}"
        dest: "vrf_configs/{{ inventory_hostname }}_restconf.json"
